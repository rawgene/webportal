# Generated by Django 2.1.5 on 2019-04-05 10:57

import analysis.models
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(max_length=50)),
                ('no_replicates', models.PositiveSmallIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Genome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organism', models.CharField(max_length=200)),
                ('source', models.CharField(max_length=200)),
                ('version', models.CharField(max_length=200)),
                ('fasta_dna_file', models.CharField(max_length=200)),
                ('fasta_cdna_file', models.CharField(max_length=200)),
                ('gtf_file', models.CharField(max_length=200)),
                ('star', models.CharField(max_length=200)),
                ('salmon', models.CharField(max_length=200)),
                ('hisat2', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Queue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cwl', models.TextField()),
                ('yml', models.TextField()),
                ('status', models.BooleanField(default=False)),
                ('jobtype', models.CharField(max_length=200)),
                ('result', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Samples',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libtype', models.CharField(choices=[('PE', 'Paired_end'), ('SG', 'Single')], max_length=200)),
                ('read_1', models.FileField(storage=django.core.files.storage.FileSystemStorage(location='/data/tony/Data'), upload_to=analysis.models.Samples.get_fastq_path)),
                ('read_2', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(location='/data/tony/Data'), upload_to=analysis.models.Samples.get_fastq_path)),
                ('accession', models.CharField(max_length=200)),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analysis.Condition')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('genome_index', models.CharField(choices=[('pre_index', 'Preindexed Genome'), ('user_provided', 'Provide Own Index')], max_length=200)),
                ('organism', models.CharField(blank=True, max_length=200, null=True)),
                ('salmon', models.BooleanField(blank=True, null=True)),
                ('fasta_dna_file', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(location='/data/tony/Data'), upload_to=analysis.models.Session.get_genome_path)),
                ('fasta_cdna_file', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(location='/data/tony/Data'), upload_to=analysis.models.Session.get_genome_path)),
                ('gtf_file', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(location='/data/tony/Data'), upload_to=analysis.models.Session.get_genome_path)),
                ('status', models.PositiveSmallIntegerField(blank=True, default=False, null=True)),
                ('pid', models.IntegerField(blank=True, null=True)),
                ('reactome', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(location='/data/tony/Data'), upload_to=analysis.models.Session.get_genome_path)),
                ('genome', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='genome_fk', to='analysis.Genome')),
            ],
        ),
        migrations.CreateModel(
            name='The_Debug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('field_one', models.CharField(max_length=200)),
                ('field_two', models.FileField(storage=django.core.files.storage.FileSystemStorage(location='/data/tony/Data'), upload_to=analysis.models.The_Debug.get_debug_upload_path)),
            ],
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=50)),
                ('mapper', models.CharField(choices=[('star', 'STARAligner'), ('hisat2', 'HISAT2'), ('salmonquant', 'SALMON')], max_length=200)),
                ('assembler', models.CharField(blank=True, choices=[('stringtie', 'STRINGTIE'), ('cufflinks', 'CUFFLINKS'), ('misorun', 'MISO'), ('htseq', 'HTSEQ'), ('featurecounts', 'FEATURECOUNTS'), ('salmoncount', 'SALMON')], max_length=200)),
                ('analysis', models.CharField(choices=[('deseq2', 'DESEQ2'), ('dexseq', 'DEXSEQ'), ('misocompare', 'MISO'), ('cuffdiff', 'CUFFDIFF'), ('edger', 'EDGER'), ('ballgown', 'BALLGOWN')], max_length=200)),
                ('status', models.BooleanField(default=False)),
                ('paths', models.TextField()),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='workflow_fk', to='analysis.Session')),
            ],
        ),
        migrations.AddField(
            model_name='samples',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='samples_fk', to='analysis.Session'),
        ),
        migrations.AddField(
            model_name='queue',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='queue_fk', to='analysis.Session'),
        ),
        migrations.AddField(
            model_name='condition',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conditions_fk', to='analysis.Session'),
        ),
    ]
